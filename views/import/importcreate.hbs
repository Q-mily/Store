<style>
    .awesomplete>ul {
        border-radius: .3em;
        margin: .2em 0 0;
        background: hsla(0, 0%, 100%, .9);
        background: linear-gradient(to bottom right, white, hsla(0, 0%, 100%, .8));
        border: 1px solid rgba(0, 0, 0, .3);
        box-shadow: .05em .2em .6em rgba(0, 0, 0, .2);
        text-shadow: none;
    }

    @supports (transform: scale(0)) {
        .awesomplete>ul {
            transition: .3s cubic-bezier(.4, .2, .5, 1.4);
            transform-origin: 1.43em -.43em;
        }

        .awesomplete>ul[hidden],
        .awesomplete>ul:empty {
            opacity: 0;
            transform: scale(0);
            display: block;
            transition-timing-function: ease;
        }
    }

    @keyframes animate {
        0% {
            background-position: left;
        }

        50% {
            background-position: right;
        }

        100% {
            background-position: right;
        }
    }



    /* Pointer */

    .awesomplete>ul:before {
        content: "";
        position: absolute;
        top: -.43em;
        left: 1em;
        width: 0;
        height: 0;
        padding: .4em;
        background: white;
        border: inherit;
        border-right: 0;
        border-bottom: 0;
        -webkit-transform: rotate(45deg);
        transform: rotate(45deg);
    }

    .awesomplete>ul>li {
        position: relative;
        padding: .2em .5em;
        cursor: pointer;
    }

    .awesomplete>ul>li:hover {
        background: hsl(200, 40%, 80%);
        color: black;
    }

    .awesomplete>ul>li[aria-selected="true"] {
        background: hsl(205, 40%, 40%);
        color: white;
    }

    .awesomplete mark {
        background: hsl(65, 100%, 50%);
    }

    .awesomplete li:hover mark {
        background: hsl(68, 100%, 41%);
    }

    .awesomplete li[aria-selected="true"] mark {
        background: hsl(86, 100%, 21%);
        color: inherit;
    }

    .shopping-cart {
        width: 750px;
        height: auto;
        margin: 80px auto;
        background: #FFFFFF;
        box-shadow: 1px 2px 3px 0px rgba(0, 0, 0, 0.10);
        border-radius: 6px;

        display: flex;
        flex-direction: column;
    }

    .item {
        padding: 20px 30px;
        height: 120px;
        display: flex;
        border-bottom: solid;
        background-color: #eef2f7;
    }


    .delete-btn {
        width: 18px;
        height: 17px;
        background: url(&amp;quot;delete-icn.svg&amp;quot;) no-repeat center;
        display: inline-block;
        Cursor: pointer;
    }

    .is-active {
        animation-name: animate;
        animation-duration: .8s;
        animation-iteration-count: 1;
        animation-timing-function: steps(28);
        animation-fill-mode: forwards;
    }


    .image {
        margin-right: 50px;
    }

    .image img {
        width: 50%;
    }

    .image,
    .description {
        width: 100%;
        text-align: center;
        margin: 6px 0;
    }


    .minus-btn img {
        margin-bottom: 3px;
    }

    .plus-btn img {
        margin-top: 2px;
    }


    input:focus {
        outline: 0;
    }

    .total-price {
        width: 83px;
        padding-top: 27px;
        text-align: center;
        font-size: 16px;
        color: #43484D;
        font-weight: 300;
    }

    .description {
        padding-top: 10px;
        margin-right: 60px;
        width: 300px;
    }
</style>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<form action="/import" method="GET" id="get_orders"></form>
<div class="row mt-2">
    <div class="col-xl-5">
        <div class="card">
            <div class="card-body">
                <h4 class="header-title">Giỏ hàng</h4>
                <div class="row " style="background-color: #e0e4ea; font-weight: 600; color:black">
                    <div class="col-4 ">Sản phẩm</div>
                    <div class="col-3 ">Đơn giá nhập</div>
                    <div class="col-2 ">Số lượng</div>
                    <div class="col-3 ">Thành tiền</div>

                </div>
                <ul class="list-group list-group-flush list-group-numbered" id="cart">
                </ul>

            </div> <!-- end card-body -->
        </div> <!-- end card-->
        <div class="card">
            <div class="card-body">
                <p>
                    Nhà cung cấp: <input id="my-input" class="awesomplete" list="mylist" />
                </p>
                <datalist id="mylist">
                    {{#each supplierr}}
                    <option id="{{this._id}}" value="{{this.name}}"></option>
                    {{/each}}
                </datalist>
                <p>Số lượng: <span id="totalQuantity" style="float: right;">0</span></p>
                <p>Tiền thanh toán: <span id="totalPayment" style="float: right;">0</span></p>
                <button id="create_import" class="btn btn-danger m-1" style="float: right;">Lưu</button>
            </div>
        </div>
    </div> <!-- end col -->

    <div class="col-7" id="list-product">
        <div class="card">
            <div class="row">
                <div class="col-sm-9">
                    <div class="tab-content" id="v-pills-tabContent-right">
                        {{#each data}}
                        <div class="tab-pane fade" id="v-pills-{{@index}}" role="tabpanel"
                            aria-labelledby="v-pills-{{@index}}">
                            <div data-simplebar="" style="max-height: 700px;">
                                {{#each this.items}}
                                <div class="col-4">
                                    <!-- Simple card -->
                                    <a class="item-product" href="javascript:void(0)" style="color: #6C757D;"
                                        data-id="{{this._id}}" data-name="{{this.Name}}" data-dvt="{{this.dvt}}"
                                        data-price="{{this.Price}}" data-quantity="{{this.Quantity}}">
                                        <div class="card d-block">
                                            <img class="card-img-top" src="assets/uploads/{{this.Image}}"
                                                alt="Card image cap">
                                            <div class="card-body p-1">
                                                <h5 class="card-title m-0 p-0">{{this.Name}}</h5>
                                                <p class="card-text m-0 p-0">Đơn giá: {{this.Price}}đ</p>
                                                <p class="card-text m-0 p-0">Đơn vị tính: {{this.dvt}}</p>
                                                <p class="card-text m-0 p-0">Số lượng: {{this.Quantity}}</p>
                                            </div> <!-- end card-body-->
                                        </div> <!-- end card-->
                                    </a>
                                </div>
                                {{/each}}
                            </div>
                        </div>
                        {{/each}}
                    </div> <!-- end tabcontent-->
                </div> <!-- end col-->

                <div class="col-sm-3 mt-2 mt-sm-0">
                    <div class="nav flex-column nav-pills" id="v-pills-tab2" role="tablist" aria-orientation="vertical">
                        {{#each data}}
                        <a class="nav-link" id="v-pills-home-tab2" data-bs-toggle="pill" href="#v-pills-{{@index}}"
                            role="tab" aria-controls="v-pills-{{@index}}" aria-selected="true">
                            <i class="mdi mdi-home-variant d-md-none d-block"></i>
                            <span class="d-none d-md-block">{{this.category}}</span>
                        </a>
                        {{/each}}
                    </div>
                </div> <!-- end col-->
            </div> <!-- end row-->
        </div>
    </div>
</div>
<script> //load scrollbar
     $(document).ready(function () {
        var input = document.getElementById("my-input");
        var awesomplete = new Awesomplete(input, {
            minChars: 1,
            list: "#mylist",
        });
    })
    var test;
    var btnDels;
    var data = [
    ];
    var totalCart;
    var totalQuantity;
    var totalDiscount;
    var totalPayment;

    var minQuantity;
    var maxQuantity;
    function remove(i) {
        data.splice(i, 1);
        renderItems();
    }

    function renderItems() {

        totalCart = 0;
        totalQuantity = 0;
        totalDiscount = 0;
        totalPayment = 0;

        for (let i = 0; i < data.length; i++) {
            data[i].total = data[i].unitprice * data[i].quantity;
            data[i].totalEND = data[i].total - (data[i].discount * data[i].quantity);

            totalCart = parseInt(totalCart) + parseInt(data[i].total);
            totalQuantity += data[i].quantity;
            totalDiscount += data[i].discount * data[i].quantity;
            totalPayment += data[i].totalEND;
        }


        $('#totalQuantity').text(totalQuantity);
        $('#totalPayment').text(totalPayment);


        var HTML = data.map(item => `<li class="list-group-item p-0">                                                         
                                        <div class=" row">
                                            <div class="col-4">           
                                                <p class="m-0 d-inline-block align-middle font-14">
                                                    <a href="apps-ecommerce-products-details.html" class="text-body">${item.name}</a>
                                                    <br>
                                                    <small class="me-2">Đơn vị tính: ${item.dvt} </small>                                                                                           
                                                </p>
                                            </div>
                                            <div class="col-3">
                                                <input type="number" min="3000" value="${item.unitprice}" class="form-control unitprice" style="width: 110px;">
                                            </div>
                                            <div class="col-2">
                                                <input type="number" min="${minQuantity}" max="${maxQuantity}" value="${item.quantity}" class="form-control quantity" style="width: 70px;">
                                            </div>
                                            <div class="col-3">
                                                <span>${item.total} <a href="javascript:void(0);" class="action-icon btn-del"> <i class="mdi mdi-delete"></i></a></span>
                                            </div>                               
                                        </div>
                                       
                                                                    
                                </li>` ).join('');
        $('#cart').empty();
        $('#cart').append(HTML);

        btnDels = $('.btn-del');
        for (let i = 0; i < btnDels.length; i++) {
            btnDels[i].addEventListener('click', function () {
                console.log(data);
                remove(i);
            });
        }

        inputQuantitys = $('.quantity');
        for (let i = 0; i < inputQuantitys.length; i++) {
            inputQuantitys[i].addEventListener('change', e => {
                if (inputQuantitys[i].value < minQuantity) {
                    inputQuantitys[i].value = minQuantity;
                }
                if (inputQuantitys[i].value > maxQuantity) {
                    inputQuantitys[i].value = maxQuantity;
                }
                data[i].quantity = inputQuantitys[i].value;
                renderItems();
            })
        }

        inputUnitPrices = $('.unitprice');
        for (let i = 0; i < inputUnitPrices.length; i++) {
            inputUnitPrices[i].addEventListener('change', e => {
                data[i].unitprice = inputUnitPrices[i].value;
                renderItems();
            })
        }
    }

    function addItem(item) {
        var existItem = data.find(i => i.id === item.id);
        if (existItem === undefined) {
            var newItem = {
                id: item.id,
                name: item.name,
                dvt: item.dvt,
                unitprice: item.price,
                quantity: minQuantity,
                discount: 0, //VND
                total: item.price,
                totalEND: item.price,
            }
            data.push(newItem);
            renderItems();
        }
        else {
            existItem.quantity = parseInt(existItem.quantity) + 1;
            renderItems();
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        // Init tabs panel category
        var listProduct = document.getElementById('list-product');
        var tabs = listProduct.getElementsByClassName('simplebar-content');
        for (i = 0; i < tabs.length; i++) {
            tabs[i].classList.add('row');
        }
        // end Init tabs panel category

        // Add Item to Cart
        $('.item-product').on("click", function (e) {
            var item = {
                id: $(this).data('id'),
                name: $(this).data('name'),
                dvt: $(this).data('dvt'),
                price: $(this).data('price'),
            }
            if ($(this).data('quantity') >= maxQuantity) {
                var msgg = "Số lượng kho nhiều hơn quy định (" + maxQuantity.toString() + ")";
                swal("Không thể chọn sản phẩm!", msgg, "error");
            }
            else {
                addItem(item);
            }
        });

        minQuantity = parseInt("{{minQuantity}}");
        maxQuantity = parseInt("{{maxQuantity}}");
    });
    // submit cart to  server 
    $('#create_import').click(function (e) {
        var json = {
            nameSupplier: $('#my-input').val(),
            order_details: data,
            totalCart: totalCart,
            totalQuantity: totalQuantity,
            totalDiscount: totalDiscount,
            totalPayment: totalPayment,
        };
        axios({
            method: 'POST',
            url: 'http://localhost:3000/import/store',
            data: JSON.stringify(json),
            headers: {
                'Content-Type': 'application/json',
            }

        }).then(async (res) => {
            if (res.status == 201) {
                await swal("Good job!", "You clicked the button!", "success");
                $('#get_orders').submit();
            }
            else {
                await alert("Đã xảy ra lỗi");
                $('#get_orders').submit();
            }
        })
    });

</script>